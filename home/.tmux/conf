#---------------------------------------------------------------
# file:     ~/.tmux/conf                         
# author: Jorge Ramirez <jorgeramirez1990@gmail.com>      
#---------------------------------------------------------------
# Based on Jason Ryan - http://jasonwryan.com/
# 

# set correct term
set -g default-terminal screen-256color

# set prefix key to ctrl+a
set-option -g prefix C-a


# reload config without killing server
bind r source-file ~/.tmux/conf \; display-message "  Config reloaded..."

# more intuitive keybindings for splitting
unbind-key %
bind-key -n C-h split-window -v
unbind-key '"'
bind-key -n C-s split-window -h

# set vi keys
setw -g mode-keys vi
unbind-key [
bind-key Escape copy-mode
unbind-key p
bind-key p paste-buffer
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection


# copy tmux buffer to clipboard
bind C-c run "tmux show-buffer | xsel -b"
# move x clipboard into tmux paste buffer
bind C-v run "tmux set-buffer \"$(xsel -o)\"; tmux paste-buffer"

# pane/window movement
bind-key j command-prompt -p "join pane from:" "join-pane -s '%%'"
bind-key s command-prompt -p "send pane to:" "join-pane -t '%%'"
bind-key S command-prompt -p "swap window with:" "swap-window -t ':%%'"
bind-key m command-prompt -p "move window to:" "move-window -t ':%%'"

# quick view of processes
bind '~' split-window "exec htop"

# open {tmux,mutt,vim} man page
bind-key T neww -n "Tmux manual" "exec man tmux"
bind-key V neww -n "Vim manual" "exec vim -c 'h user-manual|only'"

# open %% man page
bind C-m command-prompt -p "Open man page for:" "new-window 'exec man %%'"

# send the prefix to client inside window (ala nested sessions)
bind-key -n C-a send-prefix

# toggle last window like screen
bind-key C-b last-window

# confirm before killing a window or the server
bind-key k confirm kill-window
bind-key K confirm kill-server

# toggle statusbar
bind-key b set-option status

# ctrl+left/right cycles thru windows
bind-key -n C-right next
bind-key -n C-left prev

# scrollback buffer n lines
set -g history-limit 5000

# listen for activity on all windows
set -g bell-action any

# on-screen time for display-panes in ms
set -g display-panes-time 2000

# start window indexing at one instead of zero
set -g base-index 1

# enable wm window titles
set -g set-titles on

# enable auto renaming
setw -g automatic-rename on

# border colours
set -g pane-border-fg magenta
set -g pane-active-border-fg magenta
set -g pane-active-border-bg default

# wm window title string (uses statusbar variables)
set -g set-titles-string "tmux:#I [ #W ]"

# environment
set -g update-environment "DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY"

# statusbar 
#--------------------------------------------------------------
set -g window-status-format "#I:#W"
set -g window-status-current-format "#I:#W"


#set -g status-keys vi
bind-key -t vi-edit Up history-up
bind-key -t vi-edit Down history-down

set -g status-interval 1
set -g status-justify centre # center align window list

# default statusbar colors
set -g status-fg white
set -g status-bg default

# in order to make vim arrow keys mapping work
set-window-option -g xterm-keys on

# default window title colors
set-window-option -g window-status-fg black
set-window-option -g window-status-bg default
set-window-option -g window-status-attr bright

# active window title colors
set-window-option -g window-status-current-fg white
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr bright

# command/message line colors
set -g message-fg white
set -g message-bg black
set -g message-attr bright

# scroll issues
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# mouse select pane
set -g mouse-select-pane on

# Statusbar starting in X or not
if '[ -n "$DISPLAY" ]' 'source-file ~/.tmux/inx'
if '[ -z "$DISPLAY" ]' 'source-file ~/.tmux/xless'
